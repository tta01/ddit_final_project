<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:context="http://www.springframework.org/schema/context"
   xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
   xmlns:aop="http://www.springframework.org/schema/aop"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
      http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
      http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
      http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">

	<bean id="uploadFolder" class="java.lang.String">
		<constructor-arg value="D:\\final_project\\src\\JobJa\\src\\main\\webapp\\resources\\upload"></constructor-arg>
	</bean>
<!-- ww -->
   <bean id="dataSource"
      class="org.apache.commons.dbcp2.BasicDataSource">
      <!--  <property name="driverClassName"
         value="oracle.jdbc.driver.OracleDriver"></property>
      <property name="url"
         value="jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>-->
      <property name="driverClassName"
         value="net.sf.log4jdbc.sql.jdbcapi.DriverSpy"></property>
      <property name="url"
         value="jdbc:log4jdbc:oracle:thin:@112.220.114.130:1521:xe"></property>
         
      <property name="username" value="team1_202306F"></property>
      <property name="password" value="java"></property>
      
      <property name="initialSize" value="2" /> 
      <property name="maxTotal" value="3" />  
   </bean>

   <!-- 데이터베이스와 연결을 맺고 끊어질 때까지의 라이프 사이클을 관리해주는 sqlSession 객체를 생성 1) dataSource 
      2) 매퍼 xml의 위치 지정. / : src/main/resources/ -->
   <bean id="sqlSessionFactory"
      class="org.mybatis.spring.SqlSessionFactoryBean">
      <property name="dataSource" ref="dataSource"></property>
      <property name="mapperLocations"
         value="classpath:/sqlmap/**/*_SQL.xml" />
      <property name="configLocation"
         value="/WEB-INF/mybatisAlias/mybatisAlias.xml" />
   </bean>
   <!-- 데이터베이스에 개별적으로 쿼리를 실행시키는 객체. 이 객체를 통해 query를 실행함 -->
   <bean id="sqlSessionTemplate"
      class="org.mybatis.spring.SqlSessionTemplate">
      <constructor-arg index="0" ref="sqlSessionFactory" />
   </bean>

   <!-- mapper 인터페이스 설정 / 자동으로 Mapper 인터페이스를 활용하는 객체 생성 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      <property name="basePackage" value="jobja.**.mapper" />
   </bean>

   <!-- 파일업로드 설정 CommonsMultipartResolver multipartResolver = new multipartResolver(); 
      multipartResolver.setMaxUploadSize(10485760); multipartResolver.setDefaultEncoding("UTF-8"); -->
   <bean id="multipartResolver"
      class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
      <!-- 파일업로드 용량 (20MB) -->
      <property name="maxUploadSize" value="20971520" />
      <property name="defaultEncoding" value="UTF-8" />
   </bean>
   
   <!--  메일발송을 위한 설정객체  -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com"/>
      <property name="port" value="587"/>
      <property name="defaultEncoding" value="utf-8"/>
      <property name="username" value="naljabajwo7@gmail.com"/>
      <property name="password" value="pywrrcrjgutzzmyf"/>
      <property name="javaMailProperties">
         <props>
            <prop key="mail.transport.protocol">smtp</prop>
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.starttls.enable">true</prop>
            <prop key="mail.debug">true</prop>
         </props>
      </property>
   </bean>

   <tx:annotation-driven />
   
   	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>

   <!-- AOP auto proxy -->
   <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
   
   

   <context:component-scan base-package="jobja">
      <context:exclude-filter type="annotation" expression="Controller"/>
   </context:component-scan>

</beans>