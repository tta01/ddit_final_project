<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="jobja.board.mapper.NoticeBoardMapper">

	<sql id="where">
		<if test="keyword!=null and keyword!=''">
			AND  (BOARD_TITLE LIKE '%' || #{keyword} || '%')
	    </if>  
	</sql>

	<resultMap type="noticeBoardVO" id="noticeBoardMap">
		<result property="boardId" column="BOARD_ID"/>
		<result property="memId" column="MEM_ID"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardCntnt" column="BOARD_CNTNT"/>
		<result property="boardWritingDt" column="BOARD_WRITING_DT"/>
		<result property="boardUpdtDt" column="BOARD_UPDT_DT"/>
		<result property="ntbdAfId" column="NTBD_AF_ID"/>
		<result property="boardCnt" column="BOARD_CNT"/>
		<result property="prevno" column="PREVNO"/>
		<result property="nextno" column="NEXTNO"/>
		<result property="rnum" column="RNUM"/>
		<association property="atchFileVO" resultMap="atchFileMap"></association>
	</resultMap>
	
	<resultMap type="atchFileVO" id="atchFileMap">
		<result property="afId" column="AF_ID"/>
		<result property="afCreatDt" column="AF_CREAT_DT"/>
		<result property="afYn" column="AF_YN"/>
		<collection property="atchFileDetailVOList" resultMap="atchFileDetailMap"></collection>
	</resultMap>
	
	<resultMap type="atchFileDetailVO" id="atchFileDetailMap">
		<result property="afdSeq" column="AFD_SEQ" />
		<result property="afId" column="AF_ID" />
		<result property="afdOriginNm" column="AFD_ORIGIN_NM" />
		<result property="afdSaveNm" column="AFD_SAVE_NM" />
		<result property="afdFileSize" column="AFD_FILE_SIZE" />
		<result property="afdSavePath" column="AFD_SAVE_PATH" />
		<result property="afdExtsn" column="AFD_EXTSN" />
		<result property="afdCntnt" column="AFD_CNTNT" />
		<result property="afdUploadDt" column="AFD_UPLOAD_DT" />
	</resultMap>

	<!-- 공지사항 목록 -->
	<select id="list" parameterType="hashMap" resultMap="noticeBoardMap">
		/* LIST */
		SELECT T.*
			FROM
			(
            SELECT ROW_NUMBER() OVER(ORDER BY A.BOARD_ID DESC) RNUM, 
					A.BOARD_ID, A.MEM_ID, A.BOARD_TITLE, A.BOARD_CNTNT, A.BOARD_WRITING_DT,
					A.BOARD_UPDT_DT, A.NTBD_AF_ID, A.BOARD_CNT,
					B.AFD_SEQ, B.AF_ID, B.AFD_ORIGIN_NM, B.AFD_SAVE_NM, B.AFD_FILE_SIZE,
					B.AFD_SAVE_PATH, B.AFD_EXTSN, B.AFD_CNTNT, B.AFD_UPLOAD_DT
			FROM	NOTICE_BOARD A
        	LEFT OUTER JOIN ATCH_FILE_DETAIL B ON A.BOARD_ID = B.AF_ID
        	WHERE 1 = 1
			<include refid="where"></include>
		 ) T
		 
		WHERE T.RNUM BETWEEN (#{currentPage} * 20) - (20 - 1) AND (#{currentPage} * 20)
		
	</select>
	
	<!-- 전체행의 수(검색 포함) -->
	<select id="getTotal" resultType="int">
	
		SELECT COUNT(*) FROM NOTICE_BOARD
		
	</select>
	
	<!-- 다음 기본키 값 가져오기 -->
	<select id="getBoardId" resultType="String">

		SELECT 'NOT' || TO_CHAR(COALESCE(MAX(TO_NUMBER(SUBSTR(BOARD_ID, 4))),0) + 1, 'FM00000')
		FROM NOTICE_BOARD

	</select>

	<!-- 공지사항 등록 -->
	<insert id="createForm" parameterType="noticeBoardVO">
		/* createForm */
		INSERT INTO NOTICE_BOARD (
				    BOARD_ID,
				    MEM_ID,
				    BOARD_TITLE,
				    BOARD_CNTNT,
				    BOARD_WRITING_DT,
				    BOARD_UPDT_DT,
				    NTBD_AF_ID,
				    BOARD_CNT
				)
		VALUES (#{boardId},#{memId},#{boardTitle},#{boardCntnt},SYSDATE,SYSDATE,#{ntbdAfId},#{boardCnt})
	
	</insert>
	
	<!-- 공지사항 상세조회 
	LAG(BOARD_ID) OVER (ORDER BY BOARD_ID ASC) AS PREVNO,
    LEAD(BOARD_ID) OVER (ORDER BY BOARD_ID ASC) AS NEXTNO,
	-->
	<select id="detail" parameterType="noticeBoardVO" resultMap="noticeBoardMap">
		/* detail */
		
            WITH T AS
			(
			    SELECT	A.BOARD_ID, A.MEM_ID, A.BOARD_TITLE, A.BOARD_CNTNT, A.BOARD_WRITING_DT, A.BOARD_UPDT_DT, A.NTBD_AF_ID, A.BOARD_CNT,
			         	B.AFD_SEQ, B.AF_ID, B.AFD_ORIGIN_NM, B.AFD_SAVE_NM, B.AFD_FILE_SIZE, B.AFD_SAVE_PATH, B.AFD_EXTSN, B.AFD_CNTNT, B.AFD_UPLOAD_DT   
			    FROM 	NOTICE_BOARD A
			    LEFT JOIN ATCH_FILE_DETAIL B ON A.BOARD_ID = B.AF_ID
			    WHERE	(A.BOARD_ID = B.AF_ID OR B.AF_ID IS NULL)
			)
			SELECT * FROM T
			WHERE  T.BOARD_ID = #{boardId}
			
	</select>
	
	<!-- 공지사항 상세조회 
	LAG(BOARD_ID) OVER (ORDER BY BOARD_ID ASC) AS PREVNO,
    LEAD(BOARD_ID) OVER (ORDER BY BOARD_ID ASC) AS NEXTNO,
	-->
	<select id="detailPreNext" parameterType="noticeBoardVO" resultType="noticeBoardVO">
		/* detail */
		
            WITH T AS
			(
			    SELECT	A.BOARD_ID, 
			    	 LAG(BOARD_ID) OVER (ORDER BY BOARD_ID) AS PREVNO,
    				 LEAD(BOARD_ID) OVER (ORDER BY BOARD_ID) AS NEXTNO,
			         A.MEM_ID, A.BOARD_TITLE, A.BOARD_CNTNT, A.BOARD_WRITING_DT, A.BOARD_UPDT_DT, A.NTBD_AF_ID, A.BOARD_CNT
			    FROM NOTICE_BOARD A
			)
			SELECT * FROM T
			WHERE  T.BOARD_ID = #{boardId}
						
	</select>
	
	
	
	<!-- 공지사항 수정 -->
	<update id="updatePost" parameterType="noticeBoardVO" >
	
		UPDATE 	NOTICE_BOARD
		SET		BOARD_TITLE 	= #{boardTitle},
				BOARD_CNTNT 	= #{boardCntnt},
		    	BOARD_UPDT_DT 	= SYSDATE,
		    	NTBD_AF_ID 		= #{ntbdAfId}
		WHERE 	BOARD_ID 		= #{boardId}	
	
	</update>
	
	<!-- 수정시 첨부파일 수정할 때 첨부파일 상세 테이블 데이터 먼저 삭제 -->
	<delete id="delAtch" parameterType="String">

		DELETE FROM ATCH_FILE_DETAIL
		WHERE AF_ID = #{afId}

	</delete>
	
	<delete id="delAtchdt" parameterType="String">
		DELETE FROM ATCH_FILE
		WHERE AF_ID = #{afId}
	</delete>
	
	<!-- 공지사항 삭제 -->
	<delete id="deletePost" parameterType="noticeBoardVO">
	
		DELETE FROM NOTICE_BOARD
		WHERE BOARD_ID = #{boardId}
	
	</delete>

</mapper>